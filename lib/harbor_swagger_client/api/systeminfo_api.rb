=begin
#Harbor API

#These APIs provide services for manipulating Harbor project.

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module SwaggerClient
  class SysteminfoApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get general system info
    # This API is for retrieving general system info, this can be called by anonymous request.  Some attributes will be omitted in the response when this API is called by anonymous request. 
    # @param [Hash] opts the optional parameters
    # @return [GeneralInfo]
    def systeminfo_get(opts = {})
      data, _status_code, _headers = systeminfo_get_with_http_info(opts)
      data
    end

    # Get general system info
    # This API is for retrieving general system info, this can be called by anonymous request.  Some attributes will be omitted in the response when this API is called by anonymous request. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GeneralInfo, Fixnum, Hash)>] GeneralInfo data, response status code and response headers
    def systeminfo_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SysteminfoApi.systeminfo_get ...'
      end
      # resource path
      local_var_path = '/systeminfo'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GeneralInfo')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SysteminfoApi#systeminfo_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get default root certificate.
    # This endpoint is for downloading a default root certificate. 
    # @param [Hash] opts the optional parameters
    # @return [File]
    def systeminfo_getcert_get(opts = {})
      data, _status_code, _headers = systeminfo_getcert_get_with_http_info(opts)
      data
    end

    # Get default root certificate.
    # This endpoint is for downloading a default root certificate. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(File, Fixnum, Hash)>] File data, response status code and response headers
    def systeminfo_getcert_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SysteminfoApi.systeminfo_getcert_get ...'
      end
      # resource path
      local_var_path = '/systeminfo/getcert'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/octet-stream'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'File')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SysteminfoApi#systeminfo_getcert_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get system volume info (total/free size).
    # This endpoint is for retrieving system volume info that only provides for admin user.  Note that the response only reflects the storage status of local disk. 
    # @param [Hash] opts the optional parameters
    # @return [SystemInfo]
    def systeminfo_volumes_get(opts = {})
      data, _status_code, _headers = systeminfo_volumes_get_with_http_info(opts)
      data
    end

    # Get system volume info (total/free size).
    # This endpoint is for retrieving system volume info that only provides for admin user.  Note that the response only reflects the storage status of local disk. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(SystemInfo, Fixnum, Hash)>] SystemInfo data, response status code and response headers
    def systeminfo_volumes_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SysteminfoApi.systeminfo_volumes_get ...'
      end
      # resource path
      local_var_path = '/systeminfo/volumes'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SystemInfo')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SysteminfoApi#systeminfo_volumes_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
