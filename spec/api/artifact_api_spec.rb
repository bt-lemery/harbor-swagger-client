=begin
#Harbor API

#These APIs provide services for manipulating Harbor project.

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ArtifactApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ArtifactApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ArtifactApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ArtifactApi' do
    it 'should create an instance of ArtifactApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ArtifactApi)
    end
  end

  # unit tests for add_label
  # Add label to artifact
  # Add label to the specified artiact.
  # @param project_name The name of the project
  # @param repository_name The name of the repository. If it contains slash, encode it with URL encoding. e.g. a/b -&gt; a%252Fb
  # @param reference The reference of the artifact, can be digest or tag
  # @param label The label that added to the artifact. Only the ID property is needed.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'add_label test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for copy_artifact
  # Copy artifact
  # Copy the artifact specified in the \&quot;from\&quot; parameter to the repository.
  # @param project_name The name of the project
  # @param repository_name The name of the repository. If it contains slash, encode it with URL encoding. e.g. a/b -&gt; a%252Fb
  # @param from The artifact from which the new artifact is copied from, the format should be \&quot;project/repository:tag\&quot; or \&quot;project/repository@digest\&quot;.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'copy_artifact test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_tag
  # Create tag
  # Create a tag for the specified artifact
  # @param project_name The name of the project
  # @param repository_name The name of the repository. If it contains slash, encode it with URL encoding. e.g. a/b -&gt; a%252Fb
  # @param reference The reference of the artifact, can be digest or tag
  # @param tag The JSON object of tag.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'create_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_artifact
  # Delete the specific artifact
  # Delete the artifact specified by the reference under the project and repository. The reference can be digest or tag
  # @param project_name The name of the project
  # @param repository_name The name of the repository. If it contains slash, encode it with URL encoding. e.g. a/b -&gt; a%252Fb
  # @param reference The reference of the artifact, can be digest or tag
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'delete_artifact test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tag
  # Delete tag
  # Delete the tag of the specified artifact
  # @param project_name The name of the project
  # @param repository_name The name of the repository. If it contains slash, encode it with URL encoding. e.g. a/b -&gt; a%252Fb
  # @param reference The reference of the artifact, can be digest or tag
  # @param tag_name The name of the tag
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'delete_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_addition
  # Get the addition of the specific artifact
  # Get the addition of the artifact specified by the reference under the project and repository.
  # @param project_name The name of the project
  # @param repository_name The name of the repository. If it contains slash, encode it with URL encoding. e.g. a/b -&gt; a%252Fb
  # @param reference The reference of the artifact, can be digest or tag
  # @param addition The type of addition.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [String]
  describe 'get_addition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_artifact
  # Get the specific artifact
  # Get the artifact specified by the reference under the project and repository. The reference can be digest or tag.
  # @param project_name The name of the project
  # @param repository_name The name of the repository. If it contains slash, encode it with URL encoding. e.g. a/b -&gt; a%252Fb
  # @param reference The reference of the artifact, can be digest or tag
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [Integer] :page The page number
  # @option opts [Integer] :page_size The size of per page
  # @option opts [BOOLEAN] :with_tag Specify whether the tags are inclued inside the returning artifacts
  # @option opts [BOOLEAN] :with_label Specify whether the labels are inclued inside the returning artifacts
  # @option opts [BOOLEAN] :with_scan_overview Specify whether the scan overview is inclued inside the returning artifacts
  # @option opts [BOOLEAN] :with_signature Specify whether the signature is inclued inside the returning artifacts
  # @option opts [BOOLEAN] :with_immutable_status Specify whether the immutable status is inclued inside the tags of the returning artifacts. Only works when setting \&quot;with_tag&#x3D;true\&quot;
  # @return [Artifact]
  describe 'get_artifact test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_artifacts
  # List artifacts
  # List artifacts under the specific project and repository. Except the basic properties, the other supported queries in \&quot;q\&quot; includes \&quot;tags&#x3D;*\&quot; to list only tagged artifacts, \&quot;tags&#x3D;nil\&quot; to list only untagged artifacts, \&quot;tags&#x3D;~v\&quot; to list artifacts whose tag fuzzy matches \&quot;v\&quot;, \&quot;tags&#x3D;v\&quot; to list artifact whose tag exactly matches \&quot;v\&quot;, \&quot;labels&#x3D;(id1, id2)\&quot; to list artifacts that both labels with id1 and id2 are added to
  # @param project_name The name of the project
  # @param repository_name The name of the repository. If it contains slash, encode it with URL encoding. e.g. a/b -&gt; a%252Fb
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [String] :q Query string to query resources. Supported query patterns are \&quot;exact match(k&#x3D;v)\&quot;, \&quot;fuzzy match(k&#x3D;~v)\&quot;, \&quot;range(k&#x3D;[min~max])\&quot;, \&quot;list with union releationship(k&#x3D;{v1 v2 v3})\&quot; and \&quot;list with intersetion relationship(k&#x3D;(v1 v2 v3))\&quot;. The value of range and list can be string(enclosed by \&quot; or &#39;), integer or time(in format \&quot;2020-04-09 02:36:00\&quot;). All of these query patterns should be put in the query string \&quot;q&#x3D;xxx\&quot; and splitted by \&quot;,\&quot;. e.g. q&#x3D;k1&#x3D;v1,k2&#x3D;~v2,k3&#x3D;[min~max]
  # @option opts [Integer] :page The page number
  # @option opts [Integer] :page_size The size of per page
  # @option opts [BOOLEAN] :with_tag Specify whether the tags are included inside the returning artifacts
  # @option opts [BOOLEAN] :with_label Specify whether the labels are included inside the returning artifacts
  # @option opts [BOOLEAN] :with_scan_overview Specify whether the scan overview is included inside the returning artifacts
  # @option opts [BOOLEAN] :with_signature Specify whether the signature is included inside the tags of the returning artifacts. Only works when setting \&quot;with_tag&#x3D;true\&quot;
  # @option opts [BOOLEAN] :with_immutable_status Specify whether the immutable status is included inside the tags of the returning artifacts. Only works when setting \&quot;with_tag&#x3D;true\&quot;
  # @return [Array<Artifact>]
  describe 'list_artifacts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tags
  # List tags
  # List tags of the specific artifact
  # @param project_name The name of the project
  # @param repository_name The name of the repository. If it contains slash, encode it with URL encoding. e.g. a/b -&gt; a%252Fb
  # @param reference The reference of the artifact, can be digest or tag
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @option opts [String] :q Query string to query resources. Supported query patterns are \&quot;exact match(k&#x3D;v)\&quot;, \&quot;fuzzy match(k&#x3D;~v)\&quot;, \&quot;range(k&#x3D;[min~max])\&quot;, \&quot;list with union releationship(k&#x3D;{v1 v2 v3})\&quot; and \&quot;list with intersetion relationship(k&#x3D;(v1 v2 v3))\&quot;. The value of range and list can be string(enclosed by \&quot; or &#39;), integer or time(in format \&quot;2020-04-09 02:36:00\&quot;). All of these query patterns should be put in the query string \&quot;q&#x3D;xxx\&quot; and splitted by \&quot;,\&quot;. e.g. q&#x3D;k1&#x3D;v1,k2&#x3D;~v2,k3&#x3D;[min~max]
  # @option opts [Integer] :page The page number
  # @option opts [Integer] :page_size The size of per page
  # @option opts [BOOLEAN] :with_signature Specify whether the signature is included inside the returning tags
  # @option opts [BOOLEAN] :with_immutable_status Specify whether the immutable status is included inside the returning tags
  # @return [Array<Tag>]
  describe 'list_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_label
  # Remove label from artifact
  # Remove the label from the specified artiact.
  # @param project_name The name of the project
  # @param repository_name The name of the repository. If it contains slash, encode it with URL encoding. e.g. a/b -&gt; a%252Fb
  # @param reference The reference of the artifact, can be digest or tag
  # @param label_id The ID of the label that removed from the artifact.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id An unique ID for the request
  # @return [nil]
  describe 'remove_label test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
