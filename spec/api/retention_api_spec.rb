=begin
#Harbor API

#These APIs provide services for manipulating Harbor project.

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::RetentionApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RetentionApi' do
  before do
    # run before each test
    @instance = SwaggerClient::RetentionApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RetentionApi' do
    it 'should create an instance of RetentionApi' do
      expect(@instance).to be_instance_of(SwaggerClient::RetentionApi)
    end
  end

  # unit tests for retentions_id_executions_eid_patch
  # Stop a Retention job
  # Stop a Retention job, only support \&quot;stop\&quot; action now.
  # @param id Retention ID.
  # @param eid Retention execution ID.
  # @param action The action, only support \&quot;stop\&quot; now.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'retentions_id_executions_eid_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retentions_id_executions_eid_tasks_get
  # Get Retention job tasks
  # Get Retention job tasks, each repository as a task.
  # @param id Retention ID.
  # @param eid Retention execution ID.
  # @param [Hash] opts the optional parameters
  # @return [Array<RetentionExecutionTask>]
  describe 'retentions_id_executions_eid_tasks_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retentions_id_executions_eid_tasks_tid_get
  # Get Retention job task log
  # Get Retention job task log, tags ratain or deletion detail will be shown in a table.
  # @param id Retention ID.
  # @param eid Retention execution ID.
  # @param tid Retention execution ID.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'retentions_id_executions_eid_tasks_tid_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retentions_id_executions_get
  # Get a Retention job
  # Get a Retention job, job status may be delayed before job service schedule it up.
  # @param id Retention ID.
  # @param [Hash] opts the optional parameters
  # @return [Array<RetentionExecution>]
  describe 'retentions_id_executions_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retentions_id_executions_post
  # Trigger a Retention job
  # Trigger a Retention job, if dry_run is True, nothing would be deleted actually.
  # @param id Retention ID.
  # @param action 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'retentions_id_executions_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retentions_id_get
  # Get Retention Policy
  # Get Retention Policy.
  # @param id Retention ID.
  # @param [Hash] opts the optional parameters
  # @return [RetentionPolicy]
  describe 'retentions_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retentions_metadatas_get
  # Get Retention Metadatas
  # Get Retention Metadatas.
  # @param [Hash] opts the optional parameters
  # @return [RetentionMetadata]
  describe 'retentions_metadatas_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retentions_post
  # Create Retention Policy
  # Create Retention Policy, you can reference metadatas API for the policy model. You can check project metadatas to find whether a retention policy is already binded. This method should only be called when no retention policy binded to project yet. 
  # @param policy Create Retention Policy successfully.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'retentions_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
